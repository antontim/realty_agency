package com.realty.agency.domain;

// Generated Apr 1, 2013 12:12:11 AM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Measures generated by hbm2java
 */
@Entity
@Table(name = "measures", catalog = "agency")
public class Measures extends BaseEntity<Integer> implements java.io.Serializable, IEntity<Integer> {

    private MeasureTypes measureTypes;
    private String name;
    private Set<Questions> questionses = new HashSet<Questions>(0);
    private Set<MeasureImportances> measureImportancesesForMeasure2Id = new HashSet<MeasureImportances>(
            0);
    private Set<MeasureImportances> measureImportancesesForMeasure1Id = new HashSet<MeasureImportances>(
            0);
    private Set<Rates> rateses = new HashSet<Rates>(0);

    public Measures() {
    }

    public Measures(int id) {
        this.id = id;
    }

    public Measures(MeasureTypes measureTypes, String name) {
        this.measureTypes = measureTypes;
        this.name = name;
    }

    public Measures(MeasureTypes measureTypes, String name,
            Set<Questions> questionses,
            Set<MeasureImportances> measureImportancesesForMeasure2Id,
            Set<MeasureImportances> measureImportancesesForMeasure1Id,
            Set<Rates> rateses) {
        this.measureTypes = measureTypes;
        this.name = name;
        this.questionses = questionses;
        this.measureImportancesesForMeasure2Id = measureImportancesesForMeasure2Id;
        this.measureImportancesesForMeasure1Id = measureImportancesesForMeasure1Id;
        this.rateses = rateses;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "measure_type_id", nullable = false)
    public MeasureTypes getMeasureTypes() {
        return this.measureTypes;
    }

    public void setMeasureTypes(MeasureTypes measureTypes) {
        this.measureTypes = measureTypes;
    }

    @Column(name = "name", nullable = false, length = 20)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "measures")
    public Set<Questions> getQuestionses() {
        return this.questionses;
    }

    public void setQuestionses(Set<Questions> questionses) {
        this.questionses = questionses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "measuresByMeasure2Id")
    public Set<MeasureImportances> getMeasureImportancesesForMeasure2Id() {
        return this.measureImportancesesForMeasure2Id;
    }

    public void setMeasureImportancesesForMeasure2Id(
            Set<MeasureImportances> measureImportancesesForMeasure2Id) {
        this.measureImportancesesForMeasure2Id = measureImportancesesForMeasure2Id;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "measuresByMeasure1Id")
    public Set<MeasureImportances> getMeasureImportancesesForMeasure1Id() {
        return this.measureImportancesesForMeasure1Id;
    }

    public void setMeasureImportancesesForMeasure1Id(
            Set<MeasureImportances> measureImportancesesForMeasure1Id) {
        this.measureImportancesesForMeasure1Id = measureImportancesesForMeasure1Id;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "measures")
    public Set<Rates> getRateses() {
        return this.rateses;
    }

    public void setRateses(Set<Rates> rateses) {
        this.rateses = rateses;
    }

}
